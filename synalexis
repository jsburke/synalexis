#!/usr/bin/env python3
#synalexis usage:
#  -h  --help                         Print this message
#
# Building options (mutually exclusive)
#  -b  --bind <lang>                  Build the pdf for a language 
#                                     in the <lang> subdirectory
#
#  -c  --clean                        Delete non-source, non-pdf
#                                     files
#
#  -p  --purge                        Delete non-source files
#

import os, sys, argparse

here =  os.path.abspath(os.path.dirname(sys.argv[0]))

# script controls

intermediate_files = ["log", "aux", "out", "toc"]

#############################
##                         ##
## Command Line            ##
##                         ##
#############################

class parser_with_error(argparse.ArgumentParser):
  def error(self, msg = ""):
    if(msg): print("ERROR: %s" % msg)
    source = open(sys.argv[0]) # open the source for this script
    for(line_num, line) in enumerate(source):
      if(line[0] != "#"): sys.exit(msg != "") # exit program
      if(line_num > 0):   print(line[1:].rstrip("\n"))

def parse():
  parser = parser_with_error(add_help = False)

  # basic use args

  mode = parser.add_mutually_exclusive_group(required = True)

  mode.add_argument("-b", "--bind" , type = str)
  mode.add_argument("-c", "--clean", action = "store_true")
  mode.add_argument("-p", "--purge", action = "store_true")
  mode.add_argument("-h", "--help" , action = "store_true")

  options = parser.parse_args()

  if options.help:
    parser.error()
  else:
    return options

#############################
##                         ##
## Support Functions       ##
##                         ##
#############################

def files_delete(suffixes):
  for suffix in suffixes:
    command = 'find . -name "*.' + suffix + '" -type f -delete'
    print(command)
    os.system(command)

def language_bind(lang):
  return 0
#############################
##                         ##
## Main Script             ##
##                         ##
#############################

def main():
  options = parse()

  if options.bind:
    language_bind(options.bind)
  elif options.clean:
    files_delete(intermediate_files)
  elif options.purge:
    files_delete(intermediate_files + ["pdf"])
  else:
    print("error")

main()
